# .github/workflows/firebase-hosting-preview.yml
name: Firebase Preview Deploy (Service Account)

on:
  push:
    branches:
      - main

jobs:
  preview:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.jsÂ 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: |
          cat <<EOF > .env
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          EOF

      - name: Build
        run: npm run build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Write Service Account Key
        run: |
          cat <<EOF > service-account.json
          ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          EOF

      - name: Deploy to Preview Channel and capture URL
        id: deploy
        shell: bash
        run: |
          # authenticate via service account
          export GOOGLE_APPLICATION_CREDENTIALS="$PWD/service-account.json"

          # deploy to preview channel (exit code ignored so we can still describe)
          firebase hosting:channel:deploy preview --json || true

          # fetch channel info
          info=$(firebase hosting:channel:describe preview --json)

          # print full JSON for debugging
          echo "$info"

          # extract the URL field
          preview_url=$(echo "$info" \
            | grep -o '"url":[ ]*"[^"]*"' \
            | head -1 \
            | sed 's/"url":[ ]*"//;s/"$//')

          # export for next step
          echo "preview_url=$preview_url" >> $GITHUB_OUTPUT

      - name: Show Preview URL
        run: |
          echo ""
          echo "ðŸ”— Preview available at ${{ steps.deploy.outputs.preview_url }}"
          echo ""
